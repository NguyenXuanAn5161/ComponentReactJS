nvm install 14.17.0
nvm use 14.17.0
-- khong dung duoc
npm install --save-exact express@4.17.2 dotenv@10.0.0 body-parser@1.19.1 ejs@3.1.6
npm install --save-exact @babel/core@7.15.4 @babel/node@7.15.4 @babel/preset-env@7.15.4 nodemon@2.0.15

npm i express dotenv body-parser
npm i @babel/core @babel/node @babel/preset-env

npm i bcryptjs mysql2
npm i bluebird (giúp việc xử lý bất đồng bộ, dùng promise đơn giản)
npm i sequelize (làm việc với orm)
npm i sequelize-cli

node_modules/.bin/sequelize init
ORM Là gì?

Migration trong nodejs giống như jpa ánh xạ entity xuống database!
link tham khảo:
https://sequelize.org/docs/v6/other-topics/migrations/

lệnh tạo các file model, ... (nhiều thứ khác)
npx sequelize-cli model:generate --name User --attributes email:string,password:string,username:string

dùng lệnh npx sequelize-cli db:migrate để chạy dòng lệnh trên đồng thời tạo table trong database

sẽ có 2 table:
table muốn tạo: users
table mặc định sequelizemeta: quản lý version database

tiếp tục: Creating the first Seed (fake data xuống database)
npx sequelize-cli seed:generate --name demo-user

đối với mysql, có khái niệm số ít và số nhiều. Vì thế tên table sẽ có thêm s/es. Nhưng đối với 1 số sql khác thì không có.
Vì vậy sẽ cố định là bỏ s/es đi.

Đối với mysql, sequalize thì ta xóa s/es ở migrations và thêm thuộc tính:
define: {
//timestamps: true,
freezeTableName: true
},
//logging: false

vào config.json

-- dich code
npm i nodemon
-- server tự động restart
 // su dung thu vien nodemon de thuc thi babel-node, sau khi dich xong moi chay src/server.js
    "start": "nodemon --exec babel-node src/server.js"
